-- Authors: Spencer Hirsch, shirsch2020@my.fit.edu
--          Tyler Gutowski, tgutowski2020@my.fit.edu
-- Course:  CSE 4250, Fall 2022
-- Project: Project 3, Can you HEAR me now?

WITH ADA.TEXT_IO;
WITH ADA.STRINGS;
WITH ADA.STRINGS.FIXED;
WITH ADA.INTEGER_TEXT_IO;

PROCEDURE HEAR IS
    -- ########################################################################
    -- Does a comment (#) exist in the current line?
    FUNCTION DOES_COMMENT_EXIST (INPUT: STRING) RETURN BOOLEAN IS
	BEGIN
		FOR I IN INPUT'RANGE LOOP
			IF INPUT(I) = '#' THEN
				RETURN TRUE;
			END IF;
		END LOOP;
		RETURN FALSE;
	END DOES_COMMENT_EXIST;
	
    -- ########################################################################
    -- Get the length of a comment (Everything after and including #)
	FUNCTION GET_COMMENT_LENGTH ( INPUT : STRING ) RETURN INTEGER IS
	COMMENT_LENGTH : NATURAL := 0;
	BEFORE_POUND : BOOLEAN := TRUE;
	BEGIN
		FOR I IN INPUT'RANGE LOOP
			IF INPUT(I) = '#' THEN
				BEFORE_POUND := FALSE;
			END IF;
			IF BEFORE_POUND = FALSE THEN
				COMMENT_LENGTH := COMMENT_LENGTH + 1;
			END IF;
		END LOOP;
		RETURN COMMENT_LENGTH;
	END GET_COMMENT_LENGTH;
	
	FUNCTION GET_COMMAND_LENGTH ( INPUT : STRING; COMMENT_LENGTH : NATURAL ) RETURN INTEGER IS
	BEGIN
		RETURN INPUT'LENGTH - COMMENT_LENGTH;
	END GET_COMMAND_LENGTH;
	
    -- ########################################################################
    -- Takes String, and removes everything after index
    FUNCTION REMOVE_AFTER_INDEX (INPUT : STRING; COMMENT_LENGTH : NATURAL) RETURN STRING IS
		COMMAND_LENGTH : NATURAL := INPUT'LENGTH - COMMENT_LENGTH;
        NEW_STRING : STRING(1..COMMAND_LENGTH);
    BEGIN
		NEW_STRING := INPUT(INPUT'FIRST..COMMAND_LENGTH);
        RETURN NEW_STRING;
    END REMOVE_AFTER_INDEX;

    -- ########################################################################
    -- Prints strings
    PROCEDURE PROCESS_STRING(NEW_STRING : STRING) IS
    BEGIN
        ADA.TEXT_IO.PUT_LINE(NEW_STRING);
    END PROCESS_STRING;

LAST : NATURAL;
FOREVER: BOOLEAN := TRUE;
ARRAY_SIZE : INTEGER := 150;
COMMAND_LENGTH : NATURAL;
COMMENT_LENGTH : NATURAL;
INPUT : STRING(1..ARRAY_SIZE);
BEGIN
    WHILE FOREVER LOOP
        ADA.TEXT_IO.GET_LINE(ITEM => INPUT, LAST => LAST); -- Get INPUT
		COMMENT_LENGTH := GET_COMMENT_LENGTH(INPUT);
		IF DOES_COMMENT_EXIST(INPUT) THEN -- If there is a comment
			COMMAND_LENGTH := GET_COMMAND_LENGTH(INPUT, COMMENT_LENGTH);
			ARRAY_SIZE := COMMAND_LENGTH;
			ADA.TEXT_IO.PUT_LINE(NATURAL'IMAGE(INPUT'LENGTH));
			INPUT := REMOVE_AFTER_INDEX(INPUT, GET_COMMENT_LENGTH(INPUT)); -- Remove the comment from the end
		END IF;
		
        PROCESS_STRING(INPUT);
    END LOOP;
END HEAR;